{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rudyt\\\\WebServiceApp\\\\frontend\\\\src\\\\components\\\\News.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst News = () => {\n  _s();\n  // Define el estado para almacenar las noticias\n  const [news, setNews] = useState([]);\n  const [topic, setTopic] = useState('');\n  const [error, setError] = useState('');\n  const searchNews = async () => {\n    try {\n      const response = await axios.get(`/api/news/${topic}`);\n      setNews(response.data); // Actualiza el estado con las noticias obtenidas\n    } catch (error) {\n      if (error.response && error.response.status === 404) {\n        setError('No se encontraron noticias para este tema.');\n      } else {\n        setError('Hubo un problema al buscar las noticias.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Buscar Noticias\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: topic,\n      onChange: e => setTopic(e.target.value) // Cambia el tema de búsqueda\n      ,\n      placeholder: \"Ingresa un tema\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: searchNews,\n      children: \"Buscar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 23\n    }, this), \"  \", news.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: news.map((article, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: article.url,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: article.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: article.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 29\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No se encontraron noticias.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(News, \"xQSJzIzlKoz5Q3LtL3uVKwpeWhU=\");\n_c = News;\nexport default News;\nvar _c;\n$RefreshReg$(_c, \"News\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","News","_s","news","setNews","topic","setTopic","error","setError","searchNews","response","get","data","status","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","length","map","article","index","href","url","rel","title","description","_c","$RefreshReg$"],"sources":["C:/Users/rudyt/WebServiceApp/frontend/src/components/News.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst News = () => {\r\n    // Define el estado para almacenar las noticias\r\n    const [news, setNews] = useState([]);\r\n    const [topic, setTopic] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    const searchNews = async () => {\r\n        try {\r\n            const response = await axios.get(`/api/news/${topic}`);\r\n            setNews(response.data);  // Actualiza el estado con las noticias obtenidas\r\n        } catch (error) {\r\n            if (error.response && error.response.status === 404) {\r\n                setError('No se encontraron noticias para este tema.');\r\n            } else {\r\n                setError('Hubo un problema al buscar las noticias.');\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Buscar Noticias</h1>\r\n            <input\r\n                type=\"text\"\r\n                value={topic}\r\n                onChange={(e) => setTopic(e.target.value)}  // Cambia el tema de búsqueda\r\n                placeholder=\"Ingresa un tema\"\r\n            />\r\n            <button onClick={searchNews}>Buscar</button>\r\n\r\n            {error && <p>{error}</p>}  {/* Muestra mensaje de error si existe */}\r\n\r\n            {news.length > 0 ? (\r\n                <ul>\r\n                    {news.map((article, index) => (\r\n                        <li key={index}>\r\n                            <a href={article.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                <h3>{article.title}</h3>\r\n                                <p>{article.description}</p>\r\n                            </a>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            ) : (\r\n                <p>No se encontraron noticias.</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default News;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}